var win = Ti.UI.currentWindow;

var actInd;
Ti.include("biz_logic.js");

win.backgroundImage = 'gradientBackground.png';

win.backButtonTitle = 'Cancel';

var tokenLabel = Ti.UI.createLabel({
	text:'To download the team roster and enable this device to receive updates for your race, enter the case-sensitive team token that was generated by the master device and press the Submit button. ',
	color:'#000066',
	//font:{fontSize:16},
	font:{fontSize:16, fontWeight:'bold'},
	textAlign:'left',
	top:20,
	left:25,
	right:25,
	height:'auto'
});
win.add(tokenLabel);

var tfToken = Ti.UI.createTextField({
	color:'#000',
	font:{fontSize:30,fontFamily:'Helvetica Neue'},
	height:40,
	top:165,
	left:40,
	width:235,
	autocorrect:false,
	//hintText:'Team Token',
	keyboardType:Ti.UI.KEYBOARD_DEFAULT,
	returnKeyType:Ti.UI.RETURNKEY_DEFAULT,
	borderStyle:Ti.UI.INPUT_BORDERSTYLE_ROUNDED
});
win.add(tfToken);

var submitBtn = Ti.UI.createButton({
	top:240,
	height:40,
	width:210,
	title: 'Submit',
	enabled:true
});

var problemAlert = Ti.UI.createAlertDialog({
	title:'Invalid Token',
	message:'The token validation is case-sensitive and requires a token that is 11 characters in length. Contact support@sinequanonsolutions.com if you continue to have problems.'
});

var serverAlert = Ti.UI.createAlertDialog({
	title:'Server Error',
	message:'The token you entered cannot be found on the server. If you get this error after double checking with the token provider, contact support@sinequanonsolutions.com (include your team token).'
});

submitBtn.addEventListener('click',function(e){
	var slaveKey = tfToken.value;
	if((slaveKey.length === 11) && (slaveKey.charAt(4) == 'M')){
		win.backButtonTitle = 'Return';
		registerSlaveDevice();
	} else {
		tfToken.value = '';
		problemAlert.show();	
	}
});

win.add(submitBtn);

function registerSlaveDevice(){
	retrieveRaceUpdate();
	submitBtn.hide();
	var slaveKey = tfToken.value;
	if(slaveKey.length === 11){
		var xhr4 = Ti.Network.createHTTPClient();
		xhr4.onload = function(){
			var successFlag = 0;
			try{
				dbMain = Ti.Database.open('main');
				Ti.API.info(this.responseText);
				var doc = this.responseXML.documentElement;
				var elements = doc.getElementsByTagName("sql");
				for(var i=0; i<elements.length; i++){
					var sql = elements.item(i).text;
					if(sql === "SELECT * FROM race"){ // this string indicates that an exception was thrown on the server
						break;
					}else{
						successFlag = 1;
						Ti.API.info("enter_token - sql: "+sql);
						dbMain.execute(sql);
					}
				}
				// show success alert and change button to return
				if(successFlag == 1){
					//retrieveRaceUpdate();
					updateRaceDistance();
					updateSetAssignments();
					dbMain.execute("DELETE FROM relay_results");
					dbMain.execute("UPDATE network_status SET s_s = 0, s_1 = 0, s_2 = 0, s_3 = 0, s_4 = 0, s_5 = 0, s_6 = 0, s_7 = 0, s_8 = 0, s_9 = 0, s_10 = 0, s_11 = 0, s_12 = 0, s_13 = 0, s_14 = 0, s_15 = 0, s_16 = 0, s_17 = 0, s_18 = 0, s_19 = 0, s_20 = 0, s_21 = 0, s_22 = 0, s_23 = 0, s_24 = 0, s_25 = 0, s_26 = 0, s_27 = 0, s_28 = 0, s_29 = 0, s_30 = 0, s_31 = 0, s_32 = 0, s_33 = 0, s_34 = 0, s_35 = 0, s_36 = 0 WHERE network_id = 1");
					adListen.show();
				}else{
					serverAlert.show();
				}
				
			}catch(e){
				Ti.API.info('registerSlaveDevice Error: '+e.error);
				serverAlert.message = 'Notify support of the following error: '+e.error;
				serverAlert.show();
			}
		};
		xhr4.open('POST','https://sinequanonsolutions.appspot.com/handoff');
		var handoffData = {};
		handoffData.procId = "2";
		handoffData.ss = getSharedSecret();
		handoffData.slaveToken = slaveKey;
		if (Ti.Network.online == 1){
			xhr4.send(handoffData);
		} else {
			noNetworkAlert.show();
		}
	} else {
		invalidSKAlert.show();	
	}
	
};

var adListen = Ti.UI.createAlertDialog({
	title:'Listening Status',
	message:'Data sharing has been enabled for this device. Are you ready to start listening for race updates?',
	buttonNames: ['Yes','Not Yet']
});

adListen.addEventListener('click', function(e){
	if (e.index == 0){
		dbMain.execute("UPDATE handoff_status SET active = 1, timekeeper = 0, listen = 1 WHERE handoff_id = 1");
	} else {
		dbMain.execute("UPDATE handoff_status SET active = 1, timekeeper = 0, listen = 0 WHERE handoff_id = 1");
		adStatus.show();
	}
	dbMain.close();
});

var adStatus = Ti.UI.createAlertDialog({
	title:'Relay Manager',
	message:'When you are ready to start listening for race updates or record handoffs select Change Data Sharing Role from the Setup menu.'
});

/*
 var problemAlert = Ti.UI.createAlertDialog({
	title:'Relay Manager',
	message:'There was a problem pairing this device with the server. Please contact support.'
});
*/
var enabledAlert = Ti.UI.createAlertDialog({
	title:'Relay Manager',
	message:'Data sharing has been enabled for this device.'
});

var noNetworkAlert = Ti.UI.createAlertDialog({
	title:'Error',
	message:'You do not currently have a network connection. Please try again later.'
});

var invalidSKAlert = Ti.UI.createAlertDialog({
	title:'Error',
	message:'You have entered an invalid team token. Please try again.'
});


